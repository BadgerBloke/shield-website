env:
    browser: true
    es2021: true
extends:
    - eslint:recommended
    - plugin:react-hooks/recommended
    - plugin:jsx-a11y/recommended
    - plugin:react/recommended
    - plugin:prettier/recommended
    - google
    # - standard-with-typescript
    - prettier
parserOptions:
    ecmaFeatures:
        jsx: true
    ecmaVersion: latest
    sourceType: module
plugins:
    - react
    - jsx-a11y
    - simple-import-sort
    - prettier
    - import
    - unused-imports
settings:
    react:
        version: detect
rules:
    react/react-in-jsx-scope: off
    jsx-a11y/anchor-is-valid: off
    jsx-a11y/heading-has-content: off
    no-unused-vars: off
    unused-imports/no-unused-imports: error
    import/no-duplicates: error
    unused-imports/no-unused-vars:
        - warn
        - { 'vars': 'all', 'varsIgnorePattern': '^_', 'args': 'after-used', 'argsIgnorePattern': '^_' }
    prettier/prettier:
        - error
        - { 'endOfLine': 'auto' }
    simple-import-sort/imports: error
    simple-import-sort/exports: error
    no-console: warn
    require-jsdoc:
        - error
        - {
              'require':
                  {
                      'FunctionDeclaration': false,
                      'MethodDefinition': false,
                      'ClassDeclaration': false,
                      'ArrowFunctionExpression': false,
                      'FunctionExpression': false,
                  },
          }
overrides:
    - {
          'files': ['**/*.ts', '**/*.tsx'],
          'parser': '@typescript-eslint/parser',
          'plugins': ['@typescript-eslint'],
          'extends': ['plugin:@typescript-eslint/recommended'],
          'rules':
              {
                  'react/prop-types': 'off',
                  '@typescript-eslint/no-unused-vars': 'error',
                  '@typescript-eslint/ban-ts-comment': 'warn',
                  'new-cap': ['error', { 'capIsNewExceptions': ['Inter'] }],
                  'simple-import-sort/imports': ['error', { 'groups': [
                                      # // Style imports
                                      ["^.+\\.s?css$"],
                                      # // `react` first, `@remix-` second, then packages starting with a character
                                      ['^react$', '^@remix-', '^[a-z]'],
                                      # // Packages starting with `@`
                                      ['^@'],
                                      # // Packages starting with `~`
                                      ['^~'],
                                      # // Imports starting with `../`
                                      ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                                      # // Imports starting with `./`
                                      ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
                                      # // Side effect imports
                                      ["^\\u0000"],
                                  ] }],
              },
      }
